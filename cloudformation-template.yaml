AWSTemplateFormatVersion: "2010-09-09"
Description: "AWS CloudFormation template that defines necessary metadata, creates a dynamodb instance and an api gateway with an api key to allow external access to the dynamodb instance"

Resources:
  DbTable:
    Type: AWS::DynamoDB::Table
    DeletionPolicy: Delete
    Properties:
      TableName: !Sub ${AWS::StackName}-db
      AttributeDefinitions:
        - AttributeName: pk
          AttributeType: S
        - AttributeName: sk
          AttributeType: S
      KeySchema:
        - AttributeName: pk
          KeyType: HASH
        - AttributeName: sk
          KeyType: RANGE
      ProvisionedThroughput:
        ReadCapacityUnits: 1
        WriteCapacityUnits: 1
      Tags:
        - Key: CreatedVia
          Value: !Sub CloudFormation ${AWS::StackName} template

  NextjsToDynamoDBUser:
    Type: AWS::IAM::User
    Properties:
      UserName: !Sub ${AWS::StackName}-nextjs-to-dynamodb-${AWS::Region}
      Policies:
        - PolicyName: NextjsToDynamoDBPolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Sid: CrudDynamodb
                Effect: Allow
                Action:
                  - dynamodb:putItem
                  - dynamodb:getItem
                  - dynamodb:updateItem
                  - dynamodb:deleteItem
                Resource: !GetAtt DbTable.Arn
      Tags:
        - Key: CreatedVia
          Value: !Sub CloudFormation ${AWS::StackName} template

  NextjsToDynamoDBUserAccessKey:
    Type: AWS::IAM::AccessKey
    Properties:
      Serial: 1
      Status: Active
      UserName: !Ref NextjsToDynamoDBUser

Outputs:
  AccessKeyId:
    Value: !Ref NextjsToDynamoDBUserAccessKey
  AccessKeySecret:
    Value: !GetAtt NextjsToDynamoDBUserAccessKey.SecretAccessKey
  TableName:
    Value: !Ref DbTable
  UserName:
    Value: !Ref NextjsToDynamoDBUser
